#!/usr/bin/env python
# coding: utf-8

import os
import sys 
import datetime
import bigquery
import ConfigParser
sys.path.append("/Job/Test/service")
from connectService import ConnectionService, MailService
reload(sys) 
sys.setdefaultencoding('utf8')

def upload_to_gs(db):
    beg = datetime.date(2015,2,10)
    end = datetime.date(2016,4,22)
    for i in xrange((end- beg).days+1):
	date = str(end - datetime.timedelta(days=i))
	date1 = str(end - datetime.timedelta(days=i-1)) 
	f = "matchedVideo%s.csv" %date.replace("-","")
        cmd_csv = """mysql -heqx-vtweb-slave-db -ukettle -pk3UTLe tracker2 -e"select * from matchedVideo where updated_at >= date_sub(curdate(),interval '%s' day) and updated_at < date_sub(curdate(),interval '%s' day);" >> %s""" %(date, date1, f)
	cmd_upload = "gsutil cp %s gs://vobile-data-analysis/matchedVideo" %f
	os.system(cmd_csv)
	os.system(cmd_upload)
	os.system("rm %s"%f)

def rename():
    s = ""
    beg = datetime.date(2015,2,10)
    end = datetime.date(2016,4,22)
    for i in xrange((end- beg).days+1):
	date = str(end - datetime.timedelta(days=i))
	f1 = "matchedVideo_%s.csv" %date.replace("-","")
	f2 = "matchedVideo%s.csv" %date.replace("-","")
	#cmd = "gsutil mv gs://vobile-data-analysis/P2P/takedownNoticeItemP2PDetail/%s gs://vobile-data-analysis/P2P/takedownNoticeItemP2PDetail/%s" %(f1,f2)
	#os.system(cmd)
	ss = "gs://vobile-data-analysis/matchedVideo/%s"%f2
	s = s+ss+","
    print s

def gs_to_bigquery():
    beg = datetime.date(2015,2,10)
    end = datetime.date(2016,4,22)
    for i in xrange((end- beg).days+1):
	date = str(end - datetime.timedelta(days=i))
	f = "matchedVideo%s.csv" %date.replace("-","")
	cmd = "bq load --skip_leading_rows=1 --field_delimiter='\\t' matchedVideo gs://vobile-data-analysis/matchedVideo/%s" %f
	os.system(cmd)
	print cmd

def main():
    conf = ConfigParser.ConfigParser()
    conf.read("/Job/datawarehouse/opertaion/script/hist/archive/")
    db=ConnectionService(conf.get("db_conf","ip"), conf.get("db_conf","user"), conf.get("db_conf","passwd"), "tracker2")
    #upload_to_gs(db)
    #rename()
    gs_to_bigquery()

if __name__=="__main__":
    main()
